package com.cognizant.pms.dailymfnav.service;

import java.util.ArrayList;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cognizant.pms.dailymfnav.exceptions.MFNotFoundException;
import com.cognizant.pms.dailymfnav.model.MFDetails;
import com.cognizant.pms.dailymfnav.repository.MFRepository;

@Service
public class MFService {
	@Autowired
	private MFRepository repository;
	
	
	@Transactional
	public List<MFDetails> getAllMutualFund(){
		return repository.findAll();
	}
	
	@Transactional
	public MFDetails getMutualFundByName(String mutualFundName) throws MutualFundNotFoundException{
		if(repository.findByMutualFundName(mutualFundName)==null)
			throw new MFNotFoundException("Mutual Fund Not Found");
		return repository.findByMutualFundName(mutualFundName);
	}

//	public List<Double> getMutualFundById(List<String> mutualFundIdList) {
//		// TODO Auto-generated method stub
//		for(String s:mutualFundIdList) {
//			valueList.add(repository.findByMutualFundId(s).getMutualFundValue());
//		}
//		 return valueList;
//	}
	public List<Double> getMutualFundByIdList(List<String> mutualFundIdList) {
		List<Double> mfValueList = new ArrayList<>();
		List<MFDetails> mfList=  repository.findByMutualFundId(mutualFundIdList);
		for(MFDetails m : mfList) {
			mfValueList.add( m.getMutualFundValue());
		}
		return mfValueList;
	}

}
